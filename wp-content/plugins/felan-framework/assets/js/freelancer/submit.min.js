"use strict";
jQuery(document).ready(function (a) {
  var e = a("#freelancer-profile-form"),
    t = a(".freelancer-profile-strength"),
    i = felan_freelancer_vars.ajax_url;
  a.each(["awards", "projects", "experience", "education"], function (t, i) {
    var n = e.find("#tab-" + i),
      d = n.find(".btn-more.profile-fields"),
      r = n.find(".felan-freelancer-warpper .row").length,
      c = a(n.find("template").html().trim());
    0 == r &&
      (c.find(".group-title h6 span").text(1),
      c.find(".project-upload").attr("id", "project-uploader_1"),
      c.find(".project-uploaded-list").attr("id", "project-uploaded-list_1"),
      c.find(".errors-log").attr("id", "felan_project_errors_log_1"),
      c.find(".uploaded-container").attr("id", "uploaded-container_1"),
      c.find(".uploaded-main").attr("id", "uploader-main_1"),
      c.insertBefore(d));
  });
  var n = e.find(".felan-freelancer-warpper > .row:first-child");
  n.find(".group-title i").removeClass("delete-group"),
    n.find("input").addClass("point-mark"),
    n.find("textarea").addClass("point-mark"),
    n.find(".project-uploaded-list input").removeClass("point-mark"),
    n.find("#project-uploaded-list_1").addClass("point-mark"),
    a("div.nice-select").removeClass("point-mark");
  var d,
    r,
    c,
    o = a("#freelancer-profile"),
    l = e.find(".point-mark");
  function s() {
    l.each(function () {
      "" !== a(this).val()
        ? a(this).addClass("point-active")
        : a(this).removeClass("point-active");
    });
    var i = e.find(".point-mark.point-active").length - 1,
      n = e.find(".point-mark").length - 1,
      d = e.find(
        "#freelancer_gallery_thumbs_container .media-thumb-wrap"
      ).length,
      r = e.find("#felan_drop_cv").attr("data-attachment-id"),
      c = e.find("#felan_author_avatar_image_view .media-thumb-wrap").length,
      s = e.find("#felan_freelancer_cover_image_view .media-thumb-wrap").length,
      p = e.find(".select2-selection__choice").attr("data-select2-id"),
      _ = e.find("#project-uploaded-list_1");
    if (
      (d > 0 && (i += 1),
      c > 0 && (i += 1),
      s > 0 && (i += 1),
      "" !== r && (i += 1),
      _.addClass("point-mark"),
      _.find(".media-thumb").length > 0
        ? (_.addClass("point-active"), (i += 1))
        : _.removeClass("point-active"),
      (n += 5),
      void 0 === p
        ? a(".felan-select2").removeClass("point-active")
        : ((i += 1), a(".felan-select2").addClass("point-active")),
      n > 0)
    )
      var u = Math.round((i / n) * 100);
    else u = 0;
    o.find(".profile-strength").css("--pct", u),
      o.find(".profile-strength h1 span:first-child").text(u),
      e.attr("data-pointactive", i),
      e.attr("data-pointall", n),
      e.find('input[name="freelancer_profile_strength"]').val(u),
      a(".profile-strength.left-sidebar").css("--pct", u),
      a(".profile-strength.left-sidebar")
        .find(".title")
        .find("span:nth-child(2)")
        .text(u),
      a.each(
        ["info", "awards", "projects", "skills", "experience", "education"],
        function (a, i) {
          var n = e.find("#tab-" + i),
            d = t.find("#profile-check-" + i),
            r = d.data("has-check"),
            c = d.data("not-check"),
            o = d.find("span");
          n.find(".point-mark").length ==
          n.find(".point-mark.point-active").length
            ? (d.addClass("check"), o.text(r))
            : (d.removeClass("check"), o.text(c));
        }
      );
  }
  function p(e) {
    a(".tab-dashboard ul li").removeClass("active"), a(e).addClass("active");
    var t = a(e).find("a").attr("href");
    a(".tab-info").hide(), a(t).show();
  }
  function _(e, t = {}, i = {}) {
    if (!(e instanceof jQuery)) return !1;
    a.each(t, function (a, t) {
      e.attr(a, t);
    }),
      a.each(i, function (a, t) {
        e.attr(a, t);
      });
  }
  function u(a, e) {
    return a instanceof jQuery && a.closest(".row").find(`input[name="${e}"]`);
  }
  function f(a) {
    return (
      a instanceof jQuery &&
      (e.validate().element(a), !a.hasClass("error") || (a.focus(), !1))
    );
  }
  function m(e) {
    a("#tab-projects .row").each(function (e) {
      e += 1;
      var t = a("#tab-projects").data("nonce"),
        n = a("#tab-projects").data("title"),
        d = a("#tab-projects").data("type"),
        r = a("#tab-projects").data("file-size"),
        c = "uploader_" + e;
      (c = new plupload.Uploader({
        browse_button: "uploader-main_" + e,
        file_data_name: "freelancer_upload_file",
        container: "uploaded-container_" + e,
        drop_element: "uploaded-container_" + e,
        max_file_count: 1,
        url: i + "?action=upload_freelancer_attachment_ajax&nonce=" + t,
        filters: {
          mime_types: [{ title: n, extensions: d }],
          max_file_size: r,
          prevent_duplicates: !0,
        },
      })).init();
      var o = "#project-uploaded-list_" + e + " .icon-project-delete";
      a("body").on("click", o, function (e) {
        e.preventDefault();
        var t = a(this),
          n = t.closest("#tab-projects").data("nonce"),
          d = t.closest("#tab-projects").data("type"),
          r = t.closest(".project-uploaded-list"),
          c = r.siblings(".project-upload"),
          o = t.closest("#tab-projects").data("uploaded");
        r.find('input[name="freelancer_project_image_id[]"]').val(""),
          r.find('input[name="freelancer_project_image_url[]"]').val(""),
          (function (e, t, n) {
            var d = a(e),
              r = d,
              c = d.closest(".media-thumb-wrap"),
              o = d.data("freelancer-id"),
              l = d.data("attachment-id");
            r.html('<i class="fal fa-spinner fa-spin large"></i>'),
              a.ajax({
                type: "post",
                url: i,
                dataType: "json",
                data: {
                  action: "remove_freelancer_attachment_ajax",
                  freelancer_id: o,
                  attachment_id: l,
                  type: t,
                  removeNonce: n,
                },
                success: function (a) {
                  a.success && c.remove(),
                    r.html('<i class="fal fa-spinner fa-spin large"></i>');
                },
                error: function () {
                  r.html('<i class="far fa-trash-alt large"></i>');
                },
              });
          })(a(this), d, n),
          a("#freelancer-profile-form").find(".point-mark").change(),
          c.html(o);
      }),
        a(this)
          .find(".browse.project-upload")
          .on("click", function () {
            !(function (t) {
              var i = {
                filters: {
                  mime_types: [{ title: n, extensions: d }],
                  max_file_size: r,
                  prevent_duplicates: !0,
                },
              };
              t.setOption(i),
                t.bind("FilesAdded", function (a, i) {
                  var n = "";
                  plupload.each(i, function (a) {
                    n +=
                      '<li class="card-preview-item" id="holder-' +
                      a.id +
                      '"></li>';
                  }),
                    (document.getElementById(
                      "project-uploaded-list_" + e
                    ).innerHTML += n),
                    a.refresh(),
                    t.start();
                }),
                t.bind("UploadProgress", function (a, t) {
                  var i = "project-uploader_" + e;
                  document.getElementById(i).innerHTML =
                    '<span><i class="fal fa-spinner fa-spin large"></i></span>';
                }),
                t.bind("Error", function (a, t) {
                  document.getElementById(
                    "felan_project_errors_log_" + e
                  ).innerHTML += "Error: " + t.message + "<br/>";
                }),
                t.bind("FileUploaded", function (t, i, n) {
                  var d = a.parseJSON(n.response);
                  if (d.success) {
                    var r = a(a("#project-single-image").html().trim()),
                      c = a("#project-uploaded-list_" + e),
                      o = a("#project-uploader_" + e);
                    r.find("img").attr("src", d.url),
                      r.find("a").attr("data-attachment-id", d.attachment_id),
                      c
                        .find("input.freelancer_project_image_id")
                        .val(d.attachment_id),
                      c.find("input.freelancer_project_image_url").val(d.url),
                      a("#holder-" + i.id).html(r),
                      a("#freelancer-profile-form")
                        .find(".point-mark")
                        .change(),
                      o.text("");
                  }
                });
            })(c),
              (function (e) {
                a(e.settings.browse_button).trigger("click");
              })(c);
          });
    });
  }
  s(),
    l.change(function () {
      s();
    }),
    "undefined" != typeof tinyMCE &&
      a("#wp-freelancer_des-wrap").hasClass("tmce-active") &&
      tinyMCE.get("freelancer_des").on("change", function () {
        var e = tinyMCE
          .get("freelancer_des")
          .getContent({ format: "text" })
          .trim().length;
        a("#wp-freelancer_des-wrap").addClass("point-mark"),
          e > 0
            ? a("#wp-freelancer_des-wrap").addClass("point-active")
            : a("#wp-freelancer_des-wrap").removeClass("point-active"),
          s();
      }),
    e.closest("#wrapper").css("overflow", "inherit"),
    (Date.prototype.addDays = function (a) {
      return this.setDate(this.getDate() + parseInt(a)), this;
    }),
    (a.validator.prototype.checkForm = function () {
      this.prepareForm();
      for (var a = 0, e = (this.currentElements = this.elements()); e[a]; a++)
        if (
          null != this.findByName(e[a].name).length &&
          this.findByName(e[a].name).length > 1
        )
          for (var t = 0; t < this.findByName(e[a].name).length; t++)
            this.check(this.findByName(e[a].name)[t]);
        else this.check(e[a]);
      return this.valid();
    }),
    e.on("click", "i.delete-group", function () {
      var e = a(this).closest(".group-title").closest(".row"),
        t = e.siblings(".row"),
        i = e.siblings("template");
      e.remove(),
        a.each(t, function (e) {
          a(this)
            .find(".group-title h6 span")
            .text(e + 1);
        }),
        i.data("size", t.size());
    }),
    e.on("click", ".group-title", function () {
      a(this).hasClass("up")
        ? a(this).removeClass("up")
        : a(this).addClass("up");
    }),
    a.validator.setDefaults({ ignore: ":hidden:not(select)" }),
    e.validate({
      ignore: [],
      rules: {},
      messages: {},
      submitHandler: function (t) {
        var n,
          d,
          r,
          c,
          o,
          l,
          s,
          p,
          _,
          u,
          f,
          m,
          v,
          h,
          g,
          j,
          b,
          y,
          w,
          k,
          x,
          C,
          D,
          I,
          B,
          E,
          S,
          T,
          z,
          M,
          N,
          Q,
          H,
          O,
          q,
          F,
          A,
          L,
          U,
          P,
          $,
          J,
          G,
          K,
          R,
          V,
          W,
          X,
          Y,
          Z,
          aa,
          ea,
          ta,
          ia,
          na;
        (n = e.find('input[name="freelancer_id"]').val()),
          (d = e.find('input[name="freelancer_first_name"]').val()),
          (r = e.find('input[name="freelancer_last_name"]').val()),
          (c = e.find('input[name="freelancer_email"]').val()),
          (o = e.find('input[name="freelancer_phone"]').val()),
          (l = e.find('input[name="freelancer_current_position"]').val()),
          (s = e.find('select[name="freelancer_categories"]').val()),
          (p = tinymce.get("freelancer_des").getContent()),
          (_ = e.find('input[name="freelancer_dob"]').val()),
          (u = e.find('select[name="freelancer_age"]').val()),
          (f = e.find('select[name="freelancer_gender"]').val()),
          (m = e.find('select[name="freelancer_languages"]').val()),
          (v = e.find('select[name="freelancer_qualification"]').val()),
          (h = e.find('select[name="freelancer_yoe"]').val()),
          (g = e.find('select[name="freelancer_salary_type"]').val()),
          (j = e.find('input[name="freelancer_offer_salary"]').val()),
          (b = e.find('select[name="freelancer_currency_type"]').val()),
          (y = e
            .find('input[name="freelancer_education_title[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (w = e
            .find('input[name="freelancer_education_level[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (k = e
            .find('input[name="freelancer_education_from[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (x = e
            .find('input[name="freelancer_education_to[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (C = e
            .find('textarea[name="freelancer_education_description[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (D = e
            .find('input[name="freelancer_experience_job[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (I = e
            .find('input[name="freelancer_experience_company[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (B = e
            .find('input[name="freelancer_experience_from[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (E = e
            .find('input[name="freelancer_experience_to[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (S = e
            .find('textarea[name="freelancer_experience_description[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (T = e.find('select[name="freelancer_skills"]').val()),
          (z = e
            .find('input[name="freelancer_project_title[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (M = e
            .find('input[name="freelancer_project_link[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (N = e
            .find('textarea[name="freelancer_project_description[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (Q = e
            .find('input[name="freelancer_project_image_id[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (H = e
            .find('input[name="freelancer_project_image_url[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (O = e
            .find('input[name="freelancer_award_title[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (q = e
            .find('input[name="freelancer_award_date[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (F = e
            .find('textarea[name="freelancer_award_description[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (A = e.find('input[name="freelancer_cover_image_id"]').val()),
          (L = e.find('input[name="freelancer_cover_image_url"]').val()),
          (U = e.find('input[name="author_avatar_image_id"]').val()),
          (P = e.find('input[name="author_avatar_image_url"]').val()),
          ($ = e.find('input[name="freelancer_video_url"]').val()),
          (J = e.find("#felan_drop_cv").attr("data-attachment-id")),
          (G = e.find('input[name="freelancer_twitter"]').val()),
          (K = e.find('input[name="freelancer_linkedin"]').val()),
          (R = e.find('input[name="freelancer_facebook"]').val()),
          (V = e.find('input[name="freelancer_instagram"]').val()),
          (W = e
            .find('select[name="freelancer_social_name[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (X = e
            .find('input[name="freelancer_social_url[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (Y = e.find('select[name="freelancer_location"]').val()),
          (Z = e.find('input[name="felan_map_address"]').val()),
          (aa = e.find('input[name="felan_map_location"]').val()),
          (ea = e.find('input[name="felan_latitude"]').val()),
          (ta = e.find('input[name="felan_longtitude"]').val()),
          (ia = e
            .find('input[name="felan_gallery_ids[]"]')
            .map(function () {
              return a(this).val();
            })
            .get()),
          (na = e.find('input[name="freelancer_profile_strength"]').val()),
          a.ajax({
            dataType: "json",
            url: i,
            data: {
              action: "freelancer_submit_ajax",
              freelancer_id: n,
              freelancer_first_name: d,
              freelancer_last_name: r,
              freelancer_email: c,
              freelancer_phone: o,
              freelancer_current_position: l,
              freelancer_categories: s,
              freelancer_des: p,
              freelancer_dob: _,
              freelancer_age: u,
              freelancer_gender: f,
              freelancer_languages: m,
              freelancer_qualification: v,
              freelancer_yoe: h,
              freelancer_offer_salary: j,
              freelancer_salary_type: g,
              freelancer_currency_type: b,
              freelancer_education_title: y,
              freelancer_education_level: w,
              freelancer_education_from: k,
              freelancer_education_to: x,
              freelancer_education_description: C,
              freelancer_experience_job: D,
              freelancer_experience_company: I,
              freelancer_experience_from: B,
              freelancer_experience_to: E,
              freelancer_experience_description: S,
              freelancer_skills: T,
              freelancer_project_title: z,
              freelancer_project_link: M,
              freelancer_project_description: N,
              freelancer_project_image_id: Q,
              freelancer_project_image_url: H,
              freelancer_award_title: O,
              freelancer_award_date: q,
              freelancer_award_description: F,
              freelancer_cover_image_id: A,
              freelancer_cover_image_url: L,
              author_avatar_image_id: U,
              author_avatar_image_url: P,
              freelancer_gallery: ia,
              freelancer_video_url: $,
              freelancer_resume: J,
              freelancer_twitter: G,
              freelancer_linkedin: K,
              freelancer_facebook: R,
              freelancer_instagram: V,
              freelancer_social_name: W,
              freelancer_social_url: X,
              freelancer_location: Y,
              freelancer_map_address: Z,
              freelancer_map_location: aa,
              freelancer_latitude: ea,
              freelancer_longtitude: ta,
              freelancer_profile_strength: na,
            },
            beforeSend: function () {
              a(".btn-update-profile .btn-loading").fadeIn();
            },
            success: function (e) {
              a(".btn-update-profile .btn-loading").fadeOut(),
                !0 === e.success && window.location.reload();
            },
          });
      },
      errorPlacement: function (a, e) {
        e.is("select.nice-select:hidden")
          ? a.insertAfter(e.next(".nice-select"))
          : a.insertAfter(e);
      },
      invalidHandler: function () {
        a(".error:visible").length > 0 &&
          a("html, body").animate(
            { scrollTop: a(".error:visible").offset().top - 100 },
            500
          );
      },
    }),
    e.on("blur", 'input[type="date"][name*="from"]', function () {
      if (!f(a(this))) return !1;
      !(function (a) {
        if (!(a instanceof jQuery)) return !1;
        var e = a.attr("name"),
          t = u(a, e.replace("from", "to"));
        if (0 == t) return !1;
        var i = new Date(a.val());
        if ("" !== i) var n = i.addDays(1).toISOString().split("T")[0];
        _(t, { min: n }, { required: !0 });
      })(a(this));
    }),
    e.on("blur", 'input[type="date"][name*="to"]', function () {
      if (!f(a(this))) return !1;
      !(function (a) {
        if (!(a instanceof jQuery)) return !1;
        var e = a.attr("name"),
          t = u(a, e.replace("to", "from"));
        if (0 == t) return !1;
        _(
          t,
          { max: new Date(a.val()).addDays(-1).toISOString().split("T")[0] },
          { required: !0 }
        );
      })(a(this));
    }),
    (r = a("#freelancer-profile .tab-list li:first-child")),
    (d = a("#main div:first-child").attr("id")),
    null !== (c = localStorage.getItem("session_felan_tab_dashboard_" + d)) &&
      (r = a(".tab-list").find(`li a[href="${c}"]`).parent()),
    p(r),
    a("#freelancer-profile .tab-list li").click(function () {
      !(function (e) {
        var t = a("#main div:first-child").attr("id");
        localStorage.setItem("session_felan_tab_dashboard_" + t, e);
      })(a(this).find("a").attr("href")),
        p(this);
    }),
    a(".btn-more.profile-fields").on("click", function () {
      var e = a(this).siblings("template"),
        t = a(e.html().trim()),
        i = parseInt(e.data("size")) + 1;
      t.find(".group-title h6 span").text(i),
        t.find(".project-upload").attr("id", "project-uploader_" + i),
        t
          .find(".project-uploaded-list")
          .attr("id", "project-uploaded-list_" + i),
        t.find(".errors-log").attr("id", "felan_project_errors_log_" + i),
        t.find(".uploaded-container").attr("id", "uploaded-container_" + i),
        t.find(".uploaded-main").attr("id", "uploader-main_" + i),
        t.insertBefore(a(this)),
        m(i),
        e.data("size", i);
    }),
    a('input[name="freelancer_cover_image_id"]').click(function () {
      var e = !1;
      a(this).is(":checked") && (e = !0),
        a('input[name="freelancer_cover_image_id"]:checked').prop(
          "checked",
          !1
        ),
        a(this).prop("checked", e);
    }),
    m();
});
